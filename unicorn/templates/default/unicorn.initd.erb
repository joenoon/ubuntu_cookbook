#! /bin/sh

PATH=/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin

<% @env.each_pair do |k,v| %>
<%= k.to_s.upcase %>="<%= v %>"
<% end %>
PID_DIR="<%= File.dirname(@env[:pid_file]) %>"

test -x $DAEMON || exit 0

if [ ! -d $PID_DIR ]; then
	mkdir -p $PID_DIR;
	chown $USER:$GROUP $PID_DIR;
fi

set -e

. /lib/lsb/init-functions

start() {
  start-stop-daemon --start --quiet --oknodo \
    --pidfile "${PID_FILE}" --chuid $USER \
    --exec "${DAEMON}" \
    -- -c ${CONF} -E ${RAILS_ENV} -D
}

stop() {
  start-stop-daemon --stop --signal QUIT --quiet --oknodo \
    --pidfile "${PID_FILE}"
}

deploy() {
  if [ -f $PID_FILE ] ; then
    PID2=`cat ${PID_FILE}`
    start-stop-daemon --stop --signal USR2 --oknodo \
      --pidfile "${PID_FILE}"
  else
    start
  fi
}

reload() {
  start-stop-daemon --stop --signal HUP --oknodo \
    --pidfile "${PID_FILE}"
}

case "$1" in
  start)
  	echo -n "Starting $NAME: "
  	start
  	echo "$NAME."
  	;;
  stop)
  	echo -n "Stopping $NAME: "
  	stop
  	echo "$NAME."
  	;;
  term)
  	echo -n "Killing $NAME: "
    start-stop-daemon --stop --signal TERM --quiet --oknodo \
      --pidfile "${PID_FILE}"
    rm -f $PID_FILE
  	echo "$NAME."
  	;;
  reload)
    echo -n "Reloading $NAME: "
    reload
  	echo "$NAME."
  	;;
  restart)
    echo -n "Restarting $NAME: "
    deploy
    reload
    echo "$NAME."
    ;;
  aworker)
    echo -n "Adding worker for $NAME: "
    start-stop-daemon --stop --signal TTIN --oknodo \
      --pidfile "${PID_FILE}"
  	echo "$NAME."
  	;;
  rworker)
    echo -n "Removing worker for $NAME: "
    start-stop-daemon --stop --signal TTOU --oknodo \
      --pidfile "${PID_FILE}"
  	echo "$NAME."
  	;;
  deploy)
    echo -n "Deploying $NAME: "
    deploy
  	echo "$NAME."
    ;;
  status)
	  status_of_proc -p $PID_FILE "$DAEMON" $NAME && exit 0 || exit $?
	  ;;
  *)
  	echo "Usage: $0 {start|stop|term|reload|restart|aworker|rworker|deploy|status}" >&2
  	exit 1
  	;;
esac

exit 0
